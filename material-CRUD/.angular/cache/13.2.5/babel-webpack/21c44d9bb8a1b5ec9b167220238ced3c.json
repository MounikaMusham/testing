{"ast":null,"code":"import _asyncToGenerator from \"/home/tynybay/Desktop/Mounika/testing-CRUD/material-CRUD/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\ndescribe('AppComponent', () => {\n  let router;\n  let location;\n  const routerSpy = jasmine.createSpyObj('Router', ['navigateByUrl']);\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule.withRoutes([{\n        path: '',\n        component: LoginComponent\n      }, {\n        path: 'userlist',\n        component: UserlistComponent\n      }])],\n      providers: [{\n        provide: Router,\n        useValue: routerSpy\n      }],\n      declarations: [AppComponent, LoginComponent]\n    }).compileComponents();\n    router = TestBed.get(Router);\n    location = TestBed.get(Location); // router.initialNavigation();\n  }));\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n  it(`should have as title 'material-CRUD'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('material-CRUD');\n  }); //   it('should render title', () => {\n  //     const fixture = TestBed.createComponent(AppComponent);\n  //     fixture.detectChanges();\n  //     const compiled = fixture.nativeElement as HTMLElement;\n  //     expect(compiled.querySelector('.content span')?.textContent).toContain('material-CRUD app is running!');\n  //   });\n\n  it('checking', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.myname).toBe(\"mouni\");\n  });\n  it('Should navigate to login when path is empty', () => {\n    const location = TestBed.get(Location);\n    expect(location.path()).toBe('');\n  }); //   it('should navigate to the login path',()=>{\n  //      const fixture = TestBed.createComponent(AppComponent);\n  //      const app = fixture.componentInstance;\n  //     // fixture.detectChanges();\n  //   })\n\n  it('navigate to \"search\" takes you to /search', () => {\n    router.navigate([\"/\"]).then(() => {\n      expect(location.path()).toBe(\"/search\");\n    });\n  });\n});","map":{"version":3,"sources":["/home/tynybay/Desktop/Mounika/testing-CRUD/material-CRUD/src/app/app.component.spec.ts"],"names":["TestBed","RouterTestingModule","AppComponent","Location","Router","LoginComponent","UserlistComponent","describe","router","location","routerSpy","jasmine","createSpyObj","beforeEach","configureTestingModule","imports","withRoutes","path","component","providers","provide","useValue","declarations","compileComponents","get","it","fixture","createComponent","app","componentInstance","expect","toBeTruthy","title","toEqual","myname","toBe","navigate","then"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserlistComponent } from './userlist/userlist.component';\ndescribe('AppComponent', () => {\n    let router;\n    let location;\n    const routerSpy = jasmine.createSpyObj('Router', ['navigateByUrl']);\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [\n                RouterTestingModule.withRoutes([\n                    { path: '', component: LoginComponent },\n                    { path: 'userlist', component: UserlistComponent }\n                ])\n            ],\n            providers: [{ provide: Router, useValue: routerSpy }],\n            declarations: [\n                AppComponent,\n                LoginComponent\n            ],\n        }).compileComponents();\n        router = TestBed.get(Router);\n        location = TestBed.get(Location);\n        // router.initialNavigation();\n    });\n    it('should create the app', () => {\n        const fixture = TestBed.createComponent(AppComponent);\n        const app = fixture.componentInstance;\n        expect(app).toBeTruthy();\n    });\n    it(`should have as title 'material-CRUD'`, () => {\n        const fixture = TestBed.createComponent(AppComponent);\n        const app = fixture.componentInstance;\n        expect(app.title).toEqual('material-CRUD');\n    });\n    //   it('should render title', () => {\n    //     const fixture = TestBed.createComponent(AppComponent);\n    //     fixture.detectChanges();\n    //     const compiled = fixture.nativeElement as HTMLElement;\n    //     expect(compiled.querySelector('.content span')?.textContent).toContain('material-CRUD app is running!');\n    //   });\n    it('checking', () => {\n        const fixture = TestBed.createComponent(AppComponent);\n        const app = fixture.componentInstance;\n        expect(app.myname).toBe(\"mouni\");\n    });\n    it('Should navigate to login when path is empty', () => {\n        const location = TestBed.get(Location);\n        expect(location.path()).toBe('');\n    });\n    //   it('should navigate to the login path',()=>{\n    //      const fixture = TestBed.createComponent(AppComponent);\n    //      const app = fixture.componentInstance;\n    //     // fixture.detectChanges();\n    //   })\n    it('navigate to \"search\" takes you to /search', () => {\n        router.navigate([\"/\"]).then(() => {\n            expect(location.path()).toBe(\"/search\");\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"module"}