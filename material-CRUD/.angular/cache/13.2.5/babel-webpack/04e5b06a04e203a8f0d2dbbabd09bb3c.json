{"ast":null,"code":"describe('LoginComponent', () => {\n  let component;\n  let fixture; // beforeEach(async () => {\n  //   await TestBed.configureTestingModule({\n  //     declarations: [ LoginComponent ]\n  //   })\n  //   .compileComponents();\n  // });\n  // beforeEach(() => {\n  //   fixture = TestBed.createComponent(LoginComponent);\n  //   component = fixture.componentInstance;\n  //   fixture.detectChanges();\n  // });\n  // it('should create', () => {\n  //   expect(component).toBeTruthy();\n  // });\n\n  it('should make the name control required', () => {\n    let control = component.loginForm.get('name');\n    control === null || control === void 0 ? void 0 : control.setValue('');\n    expect(control === null || control === void 0 ? void 0 : control.valid).toBeFalsy();\n  });\n});\nexport {};","map":{"version":3,"sources":["/home/tynybay/Desktop/Mounika/testing-CRUD/material-CRUD/src/app/login/login.component.spec.ts"],"names":["describe","component","fixture","it","control","loginForm","get","setValue","expect","valid","toBeFalsy"],"mappings":"AAAAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC7B,MAAIC,SAAJ;AACA,MAAIC,OAAJ,CAF6B,CAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAC9C,QAAIC,OAAO,GAAGH,SAAS,CAACI,SAAV,CAAoBC,GAApB,CAAwB,MAAxB,CAAd;AACAF,IAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,QAAR,CAAiB,EAAjB,CAAlD;AACAC,IAAAA,MAAM,CAACJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,KAA3D,CAAN,CAAwEC,SAAxE;AACH,GAJC,CAAF;AAKH,CAtBO,CAAR;AAuBA","sourcesContent":["describe('LoginComponent', () => {\n    let component;\n    let fixture;\n    // beforeEach(async () => {\n    //   await TestBed.configureTestingModule({\n    //     declarations: [ LoginComponent ]\n    //   })\n    //   .compileComponents();\n    // });\n    // beforeEach(() => {\n    //   fixture = TestBed.createComponent(LoginComponent);\n    //   component = fixture.componentInstance;\n    //   fixture.detectChanges();\n    // });\n    // it('should create', () => {\n    //   expect(component).toBeTruthy();\n    // });\n    it('should make the name control required', () => {\n        let control = component.loginForm.get('name');\n        control === null || control === void 0 ? void 0 : control.setValue('');\n        expect(control === null || control === void 0 ? void 0 : control.valid).toBeFalsy();\n    });\n});\nexport {};\n"]},"metadata":{},"sourceType":"module"}