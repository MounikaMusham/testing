{"ast":null,"code":"import _asyncToGenerator from \"/home/tynybay/Desktop/Mounika/testing-CRUD/material-CRUD/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DialogComponent } from './dialog.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { HttpClientModule } from '@angular/common/http';\ndescribe('DialogComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [DialogComponent],\n      imports: [ReactiveFormsModule, MatDialogModule, HttpClientModule, RouterTestingModule],\n      providers: [{\n        provide: MAT_DIALOG_DATA,\n        useValue: {}\n      }, {\n        provide: MatDialogRef,\n        useValue: {}\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(DialogComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }); //   it('should create', () => {\n  //     expect(component).toBeTruthy();\n  //   });\n\n  it('just check', () => {\n    expect(component.myname).toBe(\"mounika\");\n  });\n  it('check for name requirement', () => {\n    component.userForm.controls['name'].setValue('');\n    expect(component.userForm.valid).toBeFalsy();\n  });\n  it('check for email requirement', () => {\n    component.userForm.controls['email'].setValue('');\n    expect(component.userForm.valid).toBeFalsy();\n  });\n  it('check for username requirement', () => {\n    component.userForm.controls['username'].setValue('');\n    expect(component.userForm.valid).toBeFalsy();\n  });\n  it('check for id requirement', () => {\n    component.userForm.controls['id'].setValue('');\n    expect(component.userForm.valid).toBeFalsy();\n  });\n  it('email-check', () => {\n    let email = component.userForm.controls['email'];\n    email.setValue('123');\n    expect(email.valid).toBeFalsy();\n  });\n});","map":{"version":3,"sources":["/home/tynybay/Desktop/Mounika/testing-CRUD/material-CRUD/src/app/dialog/dialog.component.spec.ts"],"names":["TestBed","MatDialogRef","MAT_DIALOG_DATA","ReactiveFormsModule","DialogComponent","RouterTestingModule","MatDialogModule","HttpClientModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","providers","provide","useValue","compileComponents","createComponent","componentInstance","detectChanges","it","expect","myname","toBe","userForm","controls","setValue","valid","toBeFalsy","email"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DialogComponent } from './dialog.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { HttpClientModule } from '@angular/common/http';\ndescribe('DialogComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [DialogComponent],\n            imports: [ReactiveFormsModule,\n                MatDialogModule,\n                HttpClientModule,\n                RouterTestingModule],\n            providers: [\n                { provide: MAT_DIALOG_DATA, useValue: {} },\n                {\n                    provide: MatDialogRef,\n                    useValue: {}\n                },\n            ]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(DialogComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    //   it('should create', () => {\n    //     expect(component).toBeTruthy();\n    //   });\n    it('just check', () => {\n        expect(component.myname).toBe(\"mounika\");\n    });\n    it('check for name requirement', () => {\n        component.userForm.controls['name'].setValue('');\n        expect(component.userForm.valid).toBeFalsy();\n    });\n    it('check for email requirement', () => {\n        component.userForm.controls['email'].setValue('');\n        expect(component.userForm.valid).toBeFalsy();\n    });\n    it('check for username requirement', () => {\n        component.userForm.controls['username'].setValue('');\n        expect(component.userForm.valid).toBeFalsy();\n    });\n    it('check for id requirement', () => {\n        component.userForm.controls['id'].setValue('');\n        expect(component.userForm.valid).toBeFalsy();\n    });\n    it('email-check', () => {\n        let email = component.userForm.controls['email'];\n        email.setValue('123');\n        expect(email.valid).toBeFalsy();\n    });\n});\n"]},"metadata":{},"sourceType":"module"}